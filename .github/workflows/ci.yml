name: Test & Sync

on:
  push:
    branches: [ main, develop, hackathon-demo ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv for development testing
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies with uv
      run: uv sync --all-extras
    
    - name: Code formatting check
      run: uv run black --check .
    
    - name: Import sorting check
      run: uv run isort --check-only .
    
    - name: Type checking
      run: uv run mypy agents/ tools/ --ignore-missing-imports
    
    - name: Test ADK integration
      run: |
        uv run python -c "
        import google.adk
        print(f'âœ… Google ADK v{google.adk.__version__}')
        from agents.coordinator import root_agent
        print(f'âœ… Agent loaded: {root_agent.name}')
        "
    
    - name: Generate requirements.txt for pip compatibility
      run: |
        echo "ðŸ“¦ Generating requirements.txt for pip compatibility..."
        uv export --format requirements-txt --locked --no-dev --no-hashes > requirements.txt
        sed -i '/^-e \./d' requirements.txt
        echo "âœ… Generated requirements.txt ($(wc -l < requirements.txt) lines)"
    
    - name: Test pip installation compatibility
      run: |
        echo "ðŸ§ª Testing pip-based installation compatibility..."
        python -m venv test_env
        source test_env/bin/activate
        pip install -r requirements.txt
        pip install -e .
        python -c "
        import google.adk
        print(f'âœ… Google ADK v{google.adk.__version__} (via pip)')
        from agents.coordinator import root_agent
        print(f'âœ… Agent loaded: {root_agent.name} (via pip)')
        "
        deactivate
        rm -rf test_env
    
    - name: Sync requirements.txt to repository
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/hackathon-demo'
      run: |
        if git diff --quiet requirements.txt; then
          echo "ðŸ“‹ requirements.txt is up to date"
        else
          echo "ðŸ“‹ requirements.txt updated, committing changes..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add requirements.txt
          git commit -m "Update requirements.txt [skip ci]" || exit 0
          git push || echo "No changes to push"
        fi