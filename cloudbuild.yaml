# Cloud Build configuration for reliable deployment
steps:
  # Step 1: Generate requirements.txt
  - name: 'python:3.11-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "📦 Installing uv for requirements generation..."
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="$$HOME/.cargo/bin:$$PATH"
        
        echo "📋 Generating requirements.txt..."
        uv export --format requirements-txt --locked --no-dev --no-hashes > requirements.txt
        sed -i '/^-e \./d' requirements.txt
        
        echo "✅ Requirements.txt generated ($(wc -l < requirements.txt) lines)"
        head -10 requirements.txt

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "🐳 Building Docker image..."
        
        # Use the simple Dockerfile
        if [ -f "Dockerfile.simple" ]; then
          cp Dockerfile.simple Dockerfile
          echo "🔄 Using simple Dockerfile"
        fi
        
        # Build the image
        docker build -t gcr.io/$PROJECT_ID/adk-branding-assistant:latest .
        
        echo "✅ Docker build complete"

  # Step 3: Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/adk-branding-assistant:latest']

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "🚀 Deploying to Cloud Run..."
        
        gcloud run deploy adk-branding-assistant \
          --image gcr.io/$PROJECT_ID/adk-branding-assistant:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --timeout 3600 \
          --max-instances 10 \
          --port 8000 \
          --set-env-vars "GOOGLE_API_KEY=$$GOOGLE_API_KEY,OPENAI_API_KEY=$$OPENAI_API_KEY,REPLICATE_API_TOKEN=$$REPLICATE_API_TOKEN,PORT=8000"
        
        echo "✅ Deployment complete!"

# Specify timeout
timeout: 1800s

# Define build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_STANDARD_4'  # More powerful machine for faster builds
  
# Environment variables will be passed from the build trigger
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/GOOGLE_API_KEY/versions/latest
    env: 'GOOGLE_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/OPENAI_API_KEY/versions/latest
    env: 'OPENAI_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/REPLICATE_API_TOKEN/versions/latest
    env: 'REPLICATE_API_TOKEN' 